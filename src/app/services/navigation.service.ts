import { Injectable } from '@angular/core';
import { Router, NavigationEnd } from '@angular/router';
import {NavController} from "@ionic/angular";

@Injectable({
  providedIn: 'root'
})
export class NavigationService {

  private navigationStack = [];

  private doNotPushNextEvent = false;

  constructor(
    private router: Router,
    private navCtrl: NavController,
  ) {
    router.events.subscribe(event => {
      if (event instanceof NavigationEnd) {
        if (!this.doNotPushNextEvent) {
          this.navigationStack.push(event.url);
        }
        this.doNotPushNextEvent = false;
      }
    });
  }

  public getStackLength() {
    return this.navigationStack.length;
  }

  public canNavigateBack() {
    return this.getStackLength()>1;
  }

  public navigatePreviousPage() {
    this.navigationStack.pop();
    let previousUrl = this.navigationStack[this.navigationStack.length - 1];
    this.doNotPushNextEvent = true;  // event generated by navigateBack of navCtrl should not push to stack
    return this.navCtrl.navigateBack(previousUrl);
  }

  public navigateForward(url) {
    return this.navCtrl.navigateForward(url);
  }

  public navigateBackward(url) {
    return this.navCtrl.navigateBack(url);
  }

  public navigateRoot(url) {
    this.navigationStack = [];
    return this.navCtrl.navigateRoot(url);
  }

  public push(url) {
    this.navigationStack.push(url);
  }

  public pop() {
    return this.navigationStack.pop();
  }

  public getCurrentUrl() {
    return this.router.url;
  }

  public log() {
    this.printStack();
  }

  public printStack() {
    console.log('Stack dump')
    for(let i=0; i<this.getStackLength(); i++) {
      console.log(`${i}: ${this.navigationStack[i]}`);
    }
  }
}
